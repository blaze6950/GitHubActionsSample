name: ASP.NET API

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - 'src/GitHubActionsSample.Api/**'
      - 'tests/GitHubActionsSample.Api.Tests/**'
      - '.github/workflows/api.yml'
      - './Dockerfile'
      - './nuget.config'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/GitHubActionsSample.Api/**'
      - 'tests/GitHubActionsSample.Api.Tests/**'
      - '.github/workflows/api.yml'
      - './Dockerfile'
      - './nuget.config'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        if: github.ref == 'refs/heads/master'
        uses: actions/cache@v3.0.8
        with:
          path: |
            src/GitHubActionsSample.Api
            Dockerfile
          key: api-binaries
      - uses: actions/setup-dotnet@v2.1.1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/blaze6950/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Restore dependencies
        run: dotnet restore src/GitHubActionsSample.Api/GitHubActionsSample.Api.csproj
      - run: dotnet build --configuration Release src/GitHubActionsSample.Api/GitHubActionsSample.Api.csproj
      - name: Test
        run: dotnet test tests/GitHubActionsSample.Api.Tests/GitHubActionsSample.Api.Tests.csproj --verbosity normal
  publish:
    if: github.ref == 'refs/heads/master'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Cache
        if: github.ref == 'refs/heads/master'
        uses: actions/cache@v3.0.8
        with:
          path: |
            src/GitHubActionsSample.Api
            Dockerfile
          key: api-binaries
      - name: Put github token for the auth into GPR
        run: |
          find . -name "nuget.config" -exec sed -i "s/TOKEN/${{secrets.GITHUB_TOKEN}}/g" nuget.config {} \;
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Publish latest Docker image
        uses: VaultVulp/gp-docker-action@1.1.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
          image-name: github-actions-sample-api # Provide only Docker image name, tag will be automatically set to latest
          dockerfile: Dockerfile
