name: ASP.NET API # The workflow name. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#name

on: # The definition of events which trigger the workflow. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
  workflow_dispatch: # Event that allows the manual triggering of the workflow. Docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  push: # Event that triggers the workflow when a commit or tag was pushed. Docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
    branches: [ master ] # Running your workflow only when a push to specific branches occurs
    paths: # Running your workflow only when a push affects specific files. Docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
      - 'src/GitHubActionsSample.Api/**'
      - 'tests/GitHubActionsSample.Api.Tests/**'
      - '.github/workflows/api.yml'
      - 'Dockerfile'
      - 'nuget.config'
  pull_request: # Event that triggers the workflow when activity on a PR in the workflow's repo occurs. Docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
    branches: [ master ] # Running your workflow only when a pull request to specific branches occurs
    paths: # Running your workflow only when PR changes specific files. Docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-based-on-files-changed-in-a-pull-request
      - 'src/GitHubActionsSample.Api/**'
      - 'tests/GitHubActionsSample.Api.Tests/**'
      - '.github/workflows/api.yml'
      - 'Dockerfile'
      - 'nuget.config'

jobs: # Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobs
  build-and-test: # The name of the first job in the workflow, which is displayed in the GitHub UI.
    runs-on: ubuntu-latest # Defines the type of machine to run the job on. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps: # Sequence of tasks/steps - steps can run commands, run setup tasks, or run an action in your repository, a public repository, or an action published in a Docker registry. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps
      - uses: actions/checkout@v3 # Selects an action to run as part of a step in the job. Here the "actions/checkout@v3" action is used. "uses" docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses; "actions/checkout@v3" docs: https://github.com/actions/checkout#checkout-v3
      - name: Cache # A name for your step to display on GitHub.
        if: github.ref == 'refs/heads/master' # Checks the condition to prevent the step from running unless a condition is met. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsif
        uses: actions/cache@v3.0.8 # "actions/cache@v3.0.8" docs: https://github.com/actions/cache#cache
        with: # A map of input params for the specified action. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepswith
          path: | # Specifies the list of paths that should be cached.
            src/GitHubActionsSample.Api
            Dockerfile
            nuget.config
          key: ${{ github.run_id }} # The cache key value. "github.run_id" is unique for the whole workflow run.
      - uses: actions/setup-dotnet@v2.1.1 # This action sets up a .NET CLI environment for use in actions. Docs: https://github.com/actions/setup-dotnet
        with: # Input parameter with the version value.
          dotnet-version: '6.0.x'
      - name: Put github token for the auth into GPR
        run: | # Runs cmd-line programs using the operating system's shell. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun; The command is used for filling the GITHUB_TOKEN into nuget.config for proper packages restoring.
          find . -name "nuget.config" -exec sed -i "s/TOKEN/${{secrets.GITHUB_TOKEN}}/g" nuget.config {} \;
      - name: Restore dependencies
        run: dotnet restore src/GitHubActionsSample.Api/GitHubActionsSample.Api.csproj # Restores dependencies for the GitHubActionsSample.Api project.
      - run: dotnet build --configuration Release src/GitHubActionsSample.Api/GitHubActionsSample.Api.csproj # Builds the GitHubActionsSample.Api project with the Release configuration.
      - name: Test
        run: dotnet test tests/GitHubActionsSample.Api.Tests/GitHubActionsSample.Api.Tests.csproj --verbosity normal # Executes tests in the GitHubActionsSample.Api.Tests project.
      - name: Remove token from nuget.config before storing in cache
        run: | # Removes the GITHUB_TOKEN token from nuget.config, because this file will be cached for the next job, where a new GITHUB_TOKEN value will be generated. So, we need to roll back changes in this file, for easily update it in the next job.
          find . -name "nuget.config" -exec sed -i "s/${{secrets.GITHUB_TOKEN}}/TOKEN/g" nuget.config {} \;
  publish: # The second job in the workflow.
    if: github.ref == 'refs/heads/master' # A condition to prevent a job from running unless a condition is met. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idif
    needs: build-and-test # Points to the "build-and-test" job that must complete successfully before this job will run. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    runs-on: ubuntu-latest # Defines the type of machine to run the job on. Docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
    environment: production # References to the "production" environment. This allows to request an approval for the job execution. Docs: https://docs.github.com/en/actions/managing-workflow-runs/reviewing-deployments
    steps:
      - name: Cache # Here the cached data is unpacked for working with it without redundant steps that were done in the previous job.
        if: github.ref == 'refs/heads/master'
        uses: actions/cache@v3.0.8
        with:
          path: |
            src/GitHubActionsSample.Api
            Dockerfile
            nuget.config
          key: ${{ github.run_id }} # The "github.run_id" identifier is the same for the workflow execution.
      - name: Put github token for the auth into GPR
        run: | # Filling the GITHUB_TOKEN into nuget.config. We need to do it again, because this is a new job in the workflow, and the value of GITHUB_TOKEN is unique for each job in the workflow.
          find . -name "nuget.config" -exec sed -i "s/TOKEN/${{secrets.GITHUB_TOKEN}}/g" nuget.config {} \;
      - name: Build and Publish latest Docker image
        uses: VaultVulp/gp-docker-action@1.1.8 # An action created by community for building docker images and pushing them into the GitHub Docker Registry. Link: https://github.com/VaultVulp/gp-docker-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
          image-name: github-actions-sample-api # Provide only Docker image name, tag will be automatically set to latest
          dockerfile: Dockerfile
